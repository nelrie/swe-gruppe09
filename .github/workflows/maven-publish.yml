# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven CI


on:
  pull_request:
    branches:
      - main   # Wird bei Pull Requests auf 'main' ausgeführt
  push:
    branches:
      - main   # Wird bei direktem Push auf 'main' ausgeführt


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checke den Code aus dem Repository aus
      - name: Check out code
        uses: actions/checkout@v3

      # 2. Setze die Java-Umgebung auf die gewünschte Version
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Alternativen: zulu, adopt, etc.
          java-version: '17'       # Wähle die Java-Version, z.B. 17 oder 11

      # 3. Cache für Maven-Repository, um die Geschwindigkeit zu erhöhen
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Baue das Projekt und führe die Tests aus
      - name: Build with Maven
        run: mvn clean install -DskipTests=false  # Führt Tests aus
